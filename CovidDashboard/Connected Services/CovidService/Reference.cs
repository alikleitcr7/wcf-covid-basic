//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CovidDashboard.CovidService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GlobalCases", Namespace="http://schemas.datacontract.org/2004/07/CovidServiceLibrary.DataContract")]
    [System.SerializableAttribute()]
    public partial class GlobalCases : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CovidDashboard.CovidService.Global GlobalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CovidDashboard.CovidService.Global Global {
            get {
                return this.GlobalField;
            }
            set {
                if ((object.ReferenceEquals(this.GlobalField, value) != true)) {
                    this.GlobalField = value;
                    this.RaisePropertyChanged("Global");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Global", Namespace="http://schemas.datacontract.org/2004/07/CovidServiceLibrary.DataContract")]
    [System.SerializableAttribute()]
    public partial class Global : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewDeathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewRecoveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalDeathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecoveredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewConfirmed {
            get {
                return this.NewConfirmedField;
            }
            set {
                if ((this.NewConfirmedField.Equals(value) != true)) {
                    this.NewConfirmedField = value;
                    this.RaisePropertyChanged("NewConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewDeaths {
            get {
                return this.NewDeathsField;
            }
            set {
                if ((this.NewDeathsField.Equals(value) != true)) {
                    this.NewDeathsField = value;
                    this.RaisePropertyChanged("NewDeaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewRecovered {
            get {
                return this.NewRecoveredField;
            }
            set {
                if ((this.NewRecoveredField.Equals(value) != true)) {
                    this.NewRecoveredField = value;
                    this.RaisePropertyChanged("NewRecovered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalConfirmed {
            get {
                return this.TotalConfirmedField;
            }
            set {
                if ((this.TotalConfirmedField.Equals(value) != true)) {
                    this.TotalConfirmedField = value;
                    this.RaisePropertyChanged("TotalConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalDeaths {
            get {
                return this.TotalDeathsField;
            }
            set {
                if ((this.TotalDeathsField.Equals(value) != true)) {
                    this.TotalDeathsField = value;
                    this.RaisePropertyChanged("TotalDeaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecovered {
            get {
                return this.TotalRecoveredField;
            }
            set {
                if ((this.TotalRecoveredField.Equals(value) != true)) {
                    this.TotalRecoveredField = value;
                    this.RaisePropertyChanged("TotalRecovered");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetByCountryLiveParamters", Namespace="http://schemas.datacontract.org/2004/07/CovidServiceLibrary.DataContract.Paramete" +
        "rs")]
    [System.SerializableAttribute()]
    public partial class GetByCountryLiveParamters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string To {
            get {
                return this.ToField;
            }
            set {
                if ((object.ReferenceEquals(this.ToField, value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryCaseByDate", Namespace="http://schemas.datacontract.org/2004/07/CovidServiceLibrary.DataContract")]
    [System.SerializableAttribute()]
    public partial class CountryCaseByDate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecoveredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Confirmed {
            get {
                return this.ConfirmedField;
            }
            set {
                if ((this.ConfirmedField.Equals(value) != true)) {
                    this.ConfirmedField = value;
                    this.RaisePropertyChanged("Confirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Deaths {
            get {
                return this.DeathsField;
            }
            set {
                if ((this.DeathsField.Equals(value) != true)) {
                    this.DeathsField = value;
                    this.RaisePropertyChanged("Deaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lat {
            get {
                return this.LatField;
            }
            set {
                if ((object.ReferenceEquals(this.LatField, value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lon {
            get {
                return this.LonField;
            }
            set {
                if ((object.ReferenceEquals(this.LonField, value) != true)) {
                    this.LonField = value;
                    this.RaisePropertyChanged("Lon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Recovered {
            get {
                return this.RecoveredField;
            }
            set {
                if ((this.RecoveredField.Equals(value) != true)) {
                    this.RecoveredField = value;
                    this.RaisePropertyChanged("Recovered");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/CovidServiceLibrary.DataContract")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryMemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ISO2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SlugField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Country")]
        public string CountryMember {
            get {
                return this.CountryMemberField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryMemberField, value) != true)) {
                    this.CountryMemberField = value;
                    this.RaisePropertyChanged("CountryMember");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISO2 {
            get {
                return this.ISO2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ISO2Field, value) != true)) {
                    this.ISO2Field = value;
                    this.RaisePropertyChanged("ISO2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Slug {
            get {
                return this.SlugField;
            }
            set {
                if ((object.ReferenceEquals(this.SlugField, value) != true)) {
                    this.SlugField = value;
                    this.RaisePropertyChanged("Slug");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CovidService.ICovidService")]
    public interface ICovidService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICovidService/GetGlobalCases", ReplyAction="http://tempuri.org/ICovidService/GetGlobalCasesResponse")]
        CovidDashboard.CovidService.GlobalCases GetGlobalCases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICovidService/GetByCountry", ReplyAction="http://tempuri.org/ICovidService/GetByCountryResponse")]
        System.Collections.Generic.List<CovidDashboard.CovidService.CountryCaseByDate> GetByCountry(CovidDashboard.CovidService.GetByCountryLiveParamters parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICovidService/GetCountries", ReplyAction="http://tempuri.org/ICovidService/GetCountriesResponse")]
        System.Collections.Generic.List<CovidDashboard.CovidService.Country> GetCountries();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICovidServiceChannel : CovidDashboard.CovidService.ICovidService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CovidServiceClient : System.ServiceModel.ClientBase<CovidDashboard.CovidService.ICovidService>, CovidDashboard.CovidService.ICovidService {
        
        public CovidServiceClient() {
        }
        
        public CovidServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CovidServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CovidServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CovidServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CovidDashboard.CovidService.GlobalCases GetGlobalCases() {
            return base.Channel.GetGlobalCases();
        }
        
        public System.Collections.Generic.List<CovidDashboard.CovidService.CountryCaseByDate> GetByCountry(CovidDashboard.CovidService.GetByCountryLiveParamters parameters) {
            return base.Channel.GetByCountry(parameters);
        }
        
        public System.Collections.Generic.List<CovidDashboard.CovidService.Country> GetCountries() {
            return base.Channel.GetCountries();
        }
    }
}
